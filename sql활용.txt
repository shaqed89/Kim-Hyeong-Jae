객관식 14
주관식 5 ( insert 추가)
쿼리문 1 - select, insert, delete, update 예시문을 insert문으로 만들어라
	- 예시를 보고 테이블생성하는 법
	- 2~20 시퀀스 만드는법
	- 포레인키 만드는법

논술형 1문제.


1. 모델링을 보고 테이블 생성(20점)
Create table booklist(
isbn number primary key,
publishCode number not null,
bookname varchar2(50) not null,
price number,
genre varchar2(20),
pDate date not null);


Create table publish(
publishCode number primary key,
publishName varchar2(50) not null,
addr varchar2(100),
tel varchar2(20),
pDate date not null);



주관식 5문제.

2. 외래키 생성 쿼리
- 퍼블리쉬코드를 외래키로 생성하는 방법.
 alter table emp add constraint emp_fk_publishcode
 FOREIGN KEY (publishcode) refereneces publish(publishcode);

// 테이블 생성시 외래키 설정

CONSTRAINT 외래키이름 FOREIGN KEY(컬럼명, ..)

REFERENCES 참조 테이블(참조테이블 칼럼명, ....)


-emp테이블의 deptno 컬럼이 dept 테이블에 deptno 컬럼을 참조하는 외래키 생성

alter table emp add constraint emp_fk_deptno
FOREIGN key (deptno) references dept(deptno);


3. 레코드 추가
Insert into emp2 values(9999, '홍길동', sysdate, 'Programer', 7876, 2500.23, 10, 20);

--일부필드만 레코드 추가(사원번호, 이름, 급여)
insert into emp2(empno, ename, sal)
values(7777,'이종한',3000);


4. 레코드 수정
--sal,comm 값이 null인곳을 100으로 수정.
Update emp2 set sal=100 where sal is null or comm=0;


5. 레코드 삭제
--deptno가 null인값 모두 삭제
Delete from emp2 where deptno is null;


6. 테이블 복사
--TB_BOARD 라는 이름의 테이블을 TB_BOARD_TMP 라는 동일한 구조의 테이블을 만들고 데이터를 복사.
Create table empcopy as select * from emp;

◆book 모델링 테이블에서 5문제(아래)◆

create table booklist(
isbn number primary key,
publishCode number not null,
price number,
genre varchar2(20),
pDate date not null);


create table publish(
publishCode number primary key,
publishName varchar2(50) not null,
addr varchar2(100),
tel varchar2(20),
pdate date not null);


모델링을 보고 테이블 생성(20점)
-----------------------------------
 
◆sql의 특징중 잘못 된점은?◆
-비절차식언어.
-객체지향이 아니다.
-대화식 질의어이다.

* DDL(Data Definition Language)(데이터정의)
 -데이터베이스의 테이블과 같은 데이터 구조를 정의하는데 사용되는 명령러들로 (생성, 변경, 삭제, 이름변경)
  데이터 구조와 관련된 명령어들을 말함.

* DML(Data Manipulation Language)(데이터조작)
 - 스키마객체의 데이터를 입력, 수정, 조회, 삭제한다.

* DCL(Data Contol Language)(데이터제어)
 - GRANT : 데이터베이스 사용자 권한 설정
 - REVOKE : 데이터베이스 사용자 권한 회수

* TCL(Transaction Contol Language)(트랜잭션) 
 - COMMIT : 데이터베이스 트랜잭션의 내용의 업데이트를 영구적으로 확정한다.
 - ROLLBACK : 데이터베이스에서 업데이트가 오류가 발생할 때, 이전상태로 되돌리는 것 을 말한다.
 - SAVEPOINT : 특정부분에서 트랜잭션을 취소시킬수 있다


 *PDF파일 1번자료에 있음*, *영어 다알아야함*

◆INSERT문을 이용한 객관식◆
insert into emp2 values (12,ㅇㅇ,341 ,ㅇ ,ㅇ ,ㅇ ,ㅇ);

◆내장함수◆
COUNT() : 함수는 검색된 행의 수를 반환 합니다.
	SQL> SELECT COUNT(deptno) FROM DEPT; 
	
	COUNT(DEPTNO) 
	------------- 
	4 
	검색된 행의 총 수 4개를 반환합니다. 즉 4개의 부서가 존재합니다. 

SUM() : 합계.
	SQL> SELECT SUM(sal) salary FROM emp WHERE deptno = 30
	
	SALARY
	--------
	9400
	30부서 사원의 급여 합계를 보여줍니다.


AVG() : 평균값을 반환 합니다.
	SQL> SELECT ROUND(AVG(sal),1) salary FROM emp WHERE deptno = 30
	
	SALARY 
	 ---------- 
	1566.7
	30부서 사원의 평균 급여를 소수점 1자리 이하에서 반올림해서 보여줍니다


MAX() : 함수는 컬럼중의 최대값을 반환 합니다
	SQL> SELECT MAX(sal) salary FROM emp
	
	SALARY 
	---------- 
	5000
	sal컬럼중에서 제일 큰값을 반환합니다. 즉 가장 큰 급여를 반환합니다.


MIN() : 함수는 컬럼중의 최소값을 반환 합니다.
	SQL> SELECT MIN(sal) salary FROM emp; 
	
	SALARY 
	----------
	800
	sal컬럼중에서 가장 작은 값 반환합니다. 즉 가장 적은 급여를 반환합니다 


ROUND() : n값의 반올림을 하는 함수로 m(양수일 경우 소수이하, 음수일 경우 정수부분)은 소숫점 아래 자릿수를 나타낸다. 
	SQL> SELECT ROUND(191.123, 1) TEST FROM dual; 
	
	TEST 
	--------- 
	191. 1 
	SQL> SELECT ROUND(192.123, -1) TEST FROM dual; 
	TEST 
	--------- 
	190


CEIL() : 주어진 값보다는 크지만 가장 근접하는 최소값을 구하는 함수 입니다.
 	SQL> SELECT CEIL(10.1) TEST FROM dual; ?
	
	TEST 
	------- 
	11
	SQL> SELECT CEIL(-10,1) TEST FROM dual; ?
	TEST 
	------- 
	-10
 

FLOOR() : 주어진 값보다 작거나 같은 최대 정수값을 구하는 함수입니다.
	SQL> SELECT FLOOR(10.1) TEST FROM dual;
	
	TEST
	-------
	10

	SQL> SELECT FLOOR(-10.1) TEST FROM dual;
	TEST 
	-------- 
	-11


TURNC() : n값을 m 소숫점 자리로 반내림한 값을 반환합니다.(소수이하자리에 대한 버 림)
	SQL> SELECT TRUNC(7.5597, 2) TEST FROM dual; TEST 
	--------- 
	7.55
	SQL> SELECT TRUNC(5254.26, -2) TEST FROM dual;
	TEST 
	--------- 
	5200

◆시퀀스 생성◆
* CREATE SEQUENCE sequence_name 
* ?[ START WITH n ] 
* ?[ INCREMENT BY n ] 
*? [ MAXVALUE n | NOMAXVALUE ] 
* ?[ MINVALUE n | NOMINVALUE ] 
*   [ CYCLE | NOCYCLE ]
- MAXVALUE n | NOMAXVALUE : MAXVALUE는 시퀀스가 증가할 수 있는 최대값을 말합니다. 
			      NOMAXVALUE는 시퀀스의 값을 무한대로 지정합니다.
- MINVALUE n | NOMINVALUE : MINVALUE는 시퀀스의 최소값을 지정 합니다.

SQL> CREATE SEQUENCE emp_seq 
START WITH 1 
INCREMENT BY 1 
MAXVALUE 100000;
시작 값이 1이고 1씩 증가하고, 최대값이 100000만이 되는 시퀀스를 생성했습니다

◆SELECT문◆

◆중복행제거 - distinct◆
job을 선택해라 중복제거하여
SELECT DISTINCT JOB FROM EMP;

◆조인의 개념(질문형)◆
테이블 결합
별명 만드는법.
* SELECT EMPNO 사원번호, ENAME AS 사원명, JOB "담당 업무" FROM EMP; *

ex) select empno 사원명 from emp a, dept b where
ex) select empno as 사원명 from(from절에는 as 사용 못함) emp a join dept b on a.deptno=b.deptno


조인의 종류 : equi join, outer join, full join, non=equi join, naturl join, self join

◆select ename from emp where sal >=1000 and sal <=2500;◆
			      sal between 1000 and 2500;
위의 예시와 같은 결과가 나오는 쿼리문 고르기


◆서브쿼리◆
ex) 사원중에 SCOTT의 급여보다 많은 급여를 받는 사원은?
select empno, ename, job, sal from emp
where sal>=(select sal from emp where ename='SCOTT');


◆내장함수 관련문제◆
내장 함수에서 결과가 다른것은?


◆데이터사전◆
SELECT * FROM TAB;
 : 등록된 전체 테이블 조회
SELECT * FROM USER_SEQUENCES;
 : 생성된 시퀀스들을 확인
SELECT * FROM USER_CONSTRAINTS;
 : 유저가 소유한 모든 제약 조건 조회.
TAB, USER_SEQUENCES, USER_CONSTRAINTS 가 뭘 의미하는지 알아야함.

◆트랜잭션◆
COMMIT, ROLLBACK, SAVAPOINT가 의미하는것.



